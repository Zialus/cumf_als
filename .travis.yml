# https://github.com/gpuopenanalytics/libgdf/blob/master/travisci/install-cuda-trusty.sh
# https://github.com/gpuopenanalytics/libgdf/blob/master/.travis.yml

# https://github.com/JuliaGPU/CUDAapi.jl/blob/master/.travis.yml
# https://github.com/JuliaGPU/CUDAapi.jl/blob/master/.travis.osx
# https://github.com/JuliaGPU/CUDAapi.jl/blob/master/.travis.linux

# https://github.com/tmcdonell/travis-scripts/blob/master/install-cuda-trusty.sh

language: cpp
sudo: required

matrix:
  include:
#    - os: linux
#      dist: trusty
#      env: CUDA=6.5-19
#    - os: linux
#      dist: trusty
#      env: CUDA=7.0-28
    - os: linux
      dist: trusty
      env: CUDA=7.5-18
    - os: linux
      dist: xenial
      env: CUDA=8.0.61-1
    - os: linux
      dist: xenial
      env: CUDA=9.0.176-1
    - os: linux
      dist: xenial
      env: CUDA=9.1.85-1
    - os: linux
      dist: xenial
      env: CUDA=9.2.148-1
    - os: linux
      dist: xenial
      env: CUDA=10.0.130-1
    - os: linux
      dist: xenial
      env: CUDA=10.1.168-1
    - os : osx
      osx_image: xcode7.3
      env: CUDA=7.5.27
      before_install:  &cuda_install
        - brew update
        - brew upgrade cmake
        - brew install libomp
        - source ./.ci/travis_osx
    - os : osx
      osx_image: xcode8
      env: CUDA=8.0.61
      before_install: *cuda_install
    - os : osx
      osx_image: xcode8.3
      env: CUDA=9.0.176
      before_install: *cuda_install
    - os : osx
      osx_image: xcode9.2
      env: CUDA=9.1.128
      before_install: *cuda_install
    - os : osx
      osx_image: xcode9.2
      env: CUDA=9.2.148
      before_install: *cuda_install
    - os : osx
      osx_image: xcode9.4
      env: CUDA=10.0.130
      before_install: *cuda_install
    - os : osx
      osx_image: xcode10.1
      env: CUDA=10.1.168
      before_install: *cuda_install


    # SONARCLOUD
    - name: "SonarCloud"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        sonarcloud:
          organization: "zialus-github"
          token:
            secure: "s/j5fl2+JZ/4+QvIjM43Iuv2NP6ZYaUwFDPnZJ06jxF9m3uuZi6+tzV2wNlzvwEhIsb2ALjIuQd/KVTrBWHeT66UFZWu04k7XXrcWHfoCwM5sAAI3xgVUb2FNSnDUkSNkBC5Nku4jSZklHiy1PgUU8voMgTnoOY4gcriAzydeuj8lpvOPcg7Z06mwmkZpKfWf6Iut/up+NIa/iZy9HK6bkuNfc0Wah4mTh+LVCQ2EHDMLTvS9FKdRseI1xhPt3pxv5oQBa5UlcOz8IKtcc9ebdeqnpq7jyv7hgVqo/qEEu+mxzaHx+qZTWCUU6QD3d0oQaKlyiQZVtPvAr3dpo183ruH+3KmdBXKICCKWNGyPruQRG/Ktiz7weYCOFt4hs9lUvOo//MWqHxGalERs0FMSmq2oQGqpj2jxAWlARhYbZEDGuj53YrqyIphBNqsRO3HGJFS4LBKa2wZFJI7U8hx+IkZb7TUlB9AYoZRN5QQLBU82zDtmCqk03v4zD+XuZ1Rj98RGMdRY9yi1UGWQ0K4xVA42nkXTca5huAhei0sgZkL66cIraujmKrcCg3vT/6Tb0mS/2LICRtJy1zDPNVYwmcfOlG7qmHfpjQFEqv/AzQ82WZl6Yz8sAp3zvUUqOMIhkJJ76pHRMLdDxug9km5k1rK2YHSid5r0SblLE6I4uo="
      script:
        - git fetch --unshallow
        - mkdir build && cd build
        - CC=gcc-8 && CXX=g++-8 cmake -DCMAKE_BUILD_TYPE=Release ..
        - build-wrapper-linux-x86-64 --out-dir bw-output make clean all
        - ctest -V -C Release
        - cd ..
        - sonar-scanner
      env:
        - CUDA=10.1.168-1

    # COVERITY_SCAN
    - name: "Coverity Scan"
      os: linux
      dist: xenial
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
        coverity_scan:
          project:
            name: "Zialus/cumf_als"
          notification_email: raulmendesferreira@gmail.com
          build_command_prepend: "CC=gcc-8 && CXX=g++-8 && git fetch --unshallow && cov-configure --comptype gcc --compiler gcc-8 --template && mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release .."
          build_command: "make"
          branch_pattern: master
      script:
        - echo "Coverity Scan"
        - cat build/cov-int/build-log.txt
      env:
        - secure: "Ho69S2Zvtc40mZLVj54R4ss+Yb/+l9TiDCD5rsDKBpQNzO9GLGkPb646dw6md807qR+mSYkmZiMNVwS4q16fzNKw/ZqmBDMBcqlAANsGvZxGwrAoMgsPrTv3HtHu1GOIcxMk6SzGd1aP/CyDVv5dojyQn5IjxBovkfZ3/rEZ0AQkIo4bG+elt78iBSBNwnqsqcJqTykdRm6O9xMAjLIsPdIF8J/NxYYZDl4vBlmULDB53V3wI2FrxoT6NYvJgclbyoOdgVmduzigPZdJFzAE1S1f+3f5KR7K9oH1KYXTMrmLsoYNVkXEjsjgj9+81cIc+rbKcdMIP/k4P1vwXxgX9Uw1xvlumYzdIzxNy2dS3mPbsA0TQbWGH6Bpp6GrJ2aA5L9X2wLoRKAtkUTYWRneqb4GJ2Kw4Ve8zCrRsfR+IFi64QK1W62fmzNTs0H1toHtjghJnlzxdfAjIJQet/erRjW29JDJqMtELLWB1ol6sOyigBX5swXEFzoB0/rEN6VDBL19lOt5OXZUPPtYTKTEiUS27mGhYwDtuE+wmlZA+aS66/iy82MGFvjz0BHOZqqCRThBz9LKGd4O3iYKA43Ahzh6q75t0CI3ec9Xg/X3uRBNBN/oniCW5DybMuay1UOMp3//OB+OE9dlg8c/0uqMYcP5t59vINXYohqPmp7qqaI="
        - CUDA=10.1.168-1

before_install:
  - wget https://github.com/Kitware/CMake/releases/download/v3.14.4/cmake-3.14.4-Linux-x86_64.sh
  - sudo sh cmake-3.14.4-Linux-x86_64.sh --prefix=/home/travis/.local/ --exclude-subdir
  - source ./.ci/travis_linux

install:
  - export CUDA_HOME=/usr/local/cuda
  - export PATH=${CUDA_HOME}/bin:${PATH}
  - nvcc --version
  - gcc --version
  - g++ --version

script:
  - mkdir build && cd build
  - cmake -DCMAKE_BUILD_TYPE=Release ..
  - make

after_failure:
  - dmesg
  - ls -R /usr/local/cuda*
