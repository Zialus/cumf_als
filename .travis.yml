# https://github.com/gpuopenanalytics/libgdf/blob/master/travisci/install-cuda-trusty.sh
# https://github.com/gpuopenanalytics/libgdf/blob/master/.travis.yml

# https://github.com/JuliaGPU/CUDAapi.jl/blob/master/.travis.yml
# https://github.com/JuliaGPU/CUDAapi.jl/blob/master/.travis.osx
# https://github.com/JuliaGPU/CUDAapi.jl/blob/master/.travis.linux

# https://github.com/tmcdonell/travis-scripts/blob/master/install-cuda-trusty.sh

language: cpp
sudo: required

matrix:
  include:
#    - os: linux
#      dist: trusty
#      env: CUDA=6.5-19
#    - os: linux
#      dist: trusty
#      env: CUDA=7.0-28
    - os: linux
      dist: trusty
      env: CUDA=7.5-18
    - os: linux
      dist: xenial
      env: CUDA=8.0.61-1
    - os: linux
      dist: xenial
      env: CUDA=9.0.176-1
    - os: linux
      dist: xenial
      env: CUDA=9.1.85-1
    - os: linux
      dist: xenial
      env: CUDA=9.2.148-1
    - os: linux
      dist: xenial
      env: CUDA=10.0.130-1
    - os : osx
      osx_image: xcode7.3
      env: CUDA=7.5.27
      before_install:  &cuda_install
        - brew update
        - brew upgrade cmake
        - brew install libomp
        - source ./scripts/travis_osx
    - os : osx
      osx_image: xcode8
      env: CUDA=8.0.61
      before_install: *cuda_install
    - os : osx
      osx_image: xcode8.3
      env: CUDA=9.0.176
      before_install: *cuda_install
    - os : osx
      osx_image: xcode9.2
      env: CUDA=9.1.128
      before_install: *cuda_install
    - os : osx
      osx_image: xcode9.2
      env: CUDA=9.2.148
      before_install: *cuda_install
    - os : osx
      osx_image: xcode9.4
      env: CUDA=10.0.130
      before_install: *cuda_install

    # SONARCLOUD
    - os: linux
      dist: xenial
      addons:
        sonarcloud:
          organization: "zialus-github"
          token:
            secure: "s/j5fl2+JZ/4+QvIjM43Iuv2NP6ZYaUwFDPnZJ06jxF9m3uuZi6+tzV2wNlzvwEhIsb2ALjIuQd/KVTrBWHeT66UFZWu04k7XXrcWHfoCwM5sAAI3xgVUb2FNSnDUkSNkBC5Nku4jSZklHiy1PgUU8voMgTnoOY4gcriAzydeuj8lpvOPcg7Z06mwmkZpKfWf6Iut/up+NIa/iZy9HK6bkuNfc0Wah4mTh+LVCQ2EHDMLTvS9FKdRseI1xhPt3pxv5oQBa5UlcOz8IKtcc9ebdeqnpq7jyv7hgVqo/qEEu+mxzaHx+qZTWCUU6QD3d0oQaKlyiQZVtPvAr3dpo183ruH+3KmdBXKICCKWNGyPruQRG/Ktiz7weYCOFt4hs9lUvOo//MWqHxGalERs0FMSmq2oQGqpj2jxAWlARhYbZEDGuj53YrqyIphBNqsRO3HGJFS4LBKa2wZFJI7U8hx+IkZb7TUlB9AYoZRN5QQLBU82zDtmCqk03v4zD+XuZ1Rj98RGMdRY9yi1UGWQ0K4xVA42nkXTca5huAhei0sgZkL66cIraujmKrcCg3vT/6Tb0mS/2LICRtJy1zDPNVYwmcfOlG7qmHfpjQFEqv/AzQ82WZl6Yz8sAp3zvUUqOMIhkJJ76pHRMLdDxug9km5k1rK2YHSid5r0SblLE6I4uo="
      script:
        - git fetch --unshallow
        - mkdir build && cd build
        - cmake -DCMAKE_BUILD_TYPE=Release ..
        - build-wrapper-linux-x86-64 --out-dir bw-output make clean all
        - ctest -V -C Release
        - cd ..
        - sonar-scanner
      env:
        - SONAR_CLOUD="YUP"
        - CUDA=10.0.130-1

before_install:
  - wget https://cmake.org/files/v3.13/cmake-3.13.2-Linux-x86_64.sh
  - sudo sh cmake-3.13.2-Linux-x86_64.sh --prefix=/home/travis/.local/ --exclude-subdir
  - source ./scripts/travis_linux

install:
  - export CUDA_HOME=/usr/local/cuda
  - export PATH=${CUDA_HOME}/bin:${PATH}
  - nvcc --version
  - gcc --version
  - g++ --version

script:
  - mkdir build
  - cd build
  - cmake ..
  - make

after_failure:
  - dmesg
  - ls -R /usr/local/cuda*
